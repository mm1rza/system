{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"ZippyShare","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://*.zippyshare.com/v/*/file.html","https://*.zippyshare.com/v/*/file.html"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1689310404407,"data":{}},"enabled":false,"position":1,"uuid":"5ccd555e-8db1-4400-ae28-f0ea44ce5451","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIFppcHB5U2hhcmUKLy8gQG5hbWVzcGFjZSAgIHlhbmFnaXJhZ2kKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qLnppcHB5c2hhcmUuY29tL3YvKi9maWxlLmh0bWwKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vKi56aXBweXNoYXJlLmNvbS92LyovZmlsZS5odG1sCi8vIEB2ZXJzaW9uICAgICAxLjEKLy8gQGdyYW50ICAgICAgIG5vbmUKLy8gQGRlc2NyaXB0aW9uIERvd25sb2FkIFdpdGhvdXQgQWRzCi8vID09L1VzZXJTY3JpcHQ9PQovLyBpZiBlcnJvciBvY2N1cnMgd2l0aCBjbG9zaW5nIHdpbmRvd3MsIHRyeSBjb25maWcgZmlyZWZveCBieSBhY2Nlc3NpbmcgYWJvdXQ6Y29uZmlnCnZhciBzZXQ7CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgZGwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGxidXR0b24nKTsKICAgIGRsID0gZGwuZ2V0QXR0cmlidXRlKCdocmVmJyk7CiAgICBsb2NhdGlvbi5yZXBsYWNlKGRsKTsgLy8gc3RhcnQgZG93bmxvYWQKICAgIHNldCA9IHNldEludGVydmFsKGNsb3NlV2luZG93cywgMTAwMCAqIDMpOwp9KSgpOwoKZnVuY3Rpb24gY2xvc2VXaW5kb3dzKCl7CiAgICB3aW5kb3cuY2xvc2UoKTsKICAgIGNsZWFySW50ZXJ2YWwoc2V0KTsKfQ=="},{"name":"Address List BGP","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["https://bgp.he.net/search*","https://bgp.he.net/dns/*","https://bgp.he.net/AS*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1689310404413,"data":{}},"enabled":true,"position":2,"file_url":"https://raw.githubusercontent.com/laksa19/addrlistbgp/main/addrlistbgp.user.js","uuid":"63dc9b5a-fe5a-4593-950e-8dbd0fc10133","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBZGRyZXNzIExpc3QgQkdQCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9sYWtzYTE5LmdpdGh1Yi5pby9hZGRybGlzdGJncAovLyBAdXBkYXRlVVJMICAgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9sYWtzYTE5L2FkZHJsaXN0YmdwL21haW4vYWRkcmxpc3RiZ3AudXNlci5qcwovLyBAZG93bmxvYWRVUkwgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9sYWtzYTE5L2FkZHJsaXN0YmdwL21haW4vYWRkcmxpc3RiZ3AudXNlci5qcwovLyBAdmVyc2lvbiAgICAgIDAuNwovLyBAZGVzY3JpcHRpb24gIEdldCBBZHJlc3MgTGlzdCBmcm9tIEJHUAovLyBAYXV0aG9yICAgICAgIExha3NhbWFkaSBHdWtvCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9iZ3AuaGUubmV0L3NlYXJjaCoKLy8gQG1hdGNoICAgICAgICBodHRwczovL2JncC5oZS5uZXQvZG5zLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL2JncC5oZS5uZXQvQVMqCi8vIEBncmFudCAgICAgICAgbm9uZQovLyBAcmVxdWlyZSAgICAgIGh0dHA6Ly9jb2RlLmpxdWVyeS5jb20vanF1ZXJ5LTMuNC4xLm1pbi5qcwovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgICQoIiNjb250ZW50IikucHJlcGVuZChgCjxzdHlsZT4KLmJ0bnh7Ym9yZGVyOiAxcHggc29saWQgIzAwMDA2NjtoZWlnaHQ6IDIycHg7bWFyZ2luLXJpZ2h0OiA4cHg7bWFyZ2luLWJvdHRvbTo4cHg7cGFkZGluZy1sZWZ0OiAzcHg7cGFkZGluZy1yaWdodDogM3B4O2N1cnNvcjogcG9pbnRlcjt9CgoudGFicmVzdWx0IHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwNjY7CiAgICBwYWRkaW5nOiAxNXB4OwogICAgbWluLXdpZHRoOiA3NDJweDsKICAgIHdpZHRoOiA3NDJweDsKbWFyZ2luLWJvdHRvbTo4cHg7Cn0KI3RibHJlc3VsdHtib3JkZXI6IG5vbmU7IHdpZHRoOjEwMCV9Cjwvc3R5bGU+Cgo8ZGl2IGlkPSdyZXN1bHQnIHN0eWxlPSdkaXNwbGF5Om5vbmUnIGNsYXNzPSd0YWJyZXN1bHQnPgo8YnV0dG9uIGNsYXNzPSdidG54JyBpZD0nY3BzY3JpcHQnPkNvcHkgU2NyaXB0PC9idXR0b24+CjxidXR0b24gY2xhc3M9J2J0bngnIGlkPSdjbG9zZSc+Q2xvc2U8L2J1dHRvbj4KPHRhYmxlIGlkPSd0YmxyZXN1bHQnPjwvdGFibGU+CjwvZGl2PmAKKTsKICAgICQoIi5zZWFyY2giKS5hcHBlbmQoIjxhIGhyZWY9JyMnIGlkPSdnZXRzY3JpcHQnIHN0eWxlPSdjb2xvcjojMDAwMDY2Oyc+R2V0IEFkZHJlc3MgTGlzdCBTY3JpcHQ8L2E+Iik7CiAgICAkKCIjZ2V0c2NyaXB0IikuY2xpY2soZnVuY3Rpb24oKXsKICAgICAgICBpZihsb2NhdGlvbi5ocmVmLnNwbGl0KCIvIilbM10gPT0gImRucyIpewogICAgICAgICAgICBnZXRJUEROUygpOwogICAgICAgIH1lbHNlewogICAgICAgICAgICBnZXRJUCgpOwogICAgICAgIH0KICAgIH0pCgoKICAgICQoIiNjcHNjcmlwdCIpLmNsaWNrKGZ1bmN0aW9uKCl7CiAgICAgICAgY29weVRhYmxlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0YmxyZXN1bHQiKSk7CiAgICB9KQogICAgJCgiI2Nsb3NlIikuY2xpY2soZnVuY3Rpb24oKXs7CiAgICAgICAgJCgiI3Jlc3VsdCIpLmhpZGUoKQogICAgICAgICQoIiN0YmxyZXN1bHQiKS5odG1sKCIiKTsKICAgIH0pCgogICAgZnVuY3Rpb24gZ2V0SVBETlMoKXsKICAgICAgICAkKCIjdGJscmVzdWx0IikuaHRtbCgiIik7CiAgICAgICAgJCgiI3RibHJlc3VsdCIpLmFwcGVuZCgiPHRyPjx0ZD4vaXAgZmlyZXdhbGwgYWRkcmVzcy1saXN0PC90ZD48L3RyPiIpCiAgICAgICAgdmFyIGdkbnMgPSAkKCcjaGVhZGVyJykuZmluZCgnYScpWzJdLmlubmVySFRNTDsKICAgICAgICB2YXIgYSA9ICAkKCcjaXBpbmZvJykuZmluZCgiYSIpOwogICAgICAgIGEuZWFjaChmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIGlwID0gKCQodGhpcykuaHRtbCgpKTsKICAgICAgICAgICAgaWYoaXAgJiYgaXAuc3BsaXQoIi4iKS5sZW5ndGggPT0gNCl7CiAgICAgICAgICAgICAgICAkKCIjdGJscmVzdWx0IikuYXBwZW5kKGA8dHI+PHRkPmFkZCBsaXN0PSJgK2dkbnMrYCIgYWRkcmVzcz1gK2lwK2A8L3RkPjwvdHI+YCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgfSk7CiAgICAgICAgICQoIiN0YmxyZXN1bHQiKS5hcHBlbmQoIjx0cj48dGQ+PC90ZD48L3RyPiIpOwogICAgICAgICQoIiNyZXN1bHQiKS5zaG93KCk7CiAgICB9CgoKICAgIGZ1bmN0aW9uIGdldElQKCl7CiAgICAgICAgJCgiI3RibHJlc3VsdCIpLmh0bWwoIiIpOwogICAgICAgICQoIiN0YmxyZXN1bHQiKS5hcHBlbmQoIjx0cj48dGQ+L2lwIGZpcmV3YWxsIGFkZHJlc3MtbGlzdDwvdGQ+PC90cj4iKQogICAgICAgIHZhciB0ciA9ICQoJ3RhYmxlIHRyJykuZmlsdGVyKGZ1bmN0aW9uKCkgewogICAgICAgICAgICByZXR1cm4gICQodGhpcykuZmluZCgidGQiKTsKICAgICAgICB9KTsKCiAgICAgICAgdHIuZWFjaChmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIGxpc3QgPSIiOwogICAgICAgICAgICB2YXIgaXAgPSAoJCh0aGlzKS5maW5kKCdhJykuaHRtbCgpKTsKICAgICAgICAgICAgaWYobG9jYXRpb24uaHJlZi5zcGxpdCgiLyIpWzNdLnN1YnN0cigwLDIpID09ICJBUyIpewogICAgICAgICAgICAgICAgbGlzdCA9ICQoJyNoZWFkZXInKS5maW5kKCdhJylbMl0uaW5uZXJIVE1MOwogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIGxpc3QgPSAkKCcjc2VhcmNoX3NlYXJjaCcpLnZhbCgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmKGlwICYmIGlwLnNwbGl0KCIuIikubGVuZ3RoID09IDQpewogICAgICAgICAgICAgICAgJCgiI3RibHJlc3VsdCIpLmFwcGVuZChgPHRyPjx0ZD5hZGQgbGlzdD0iYCtsaXN0K2AiIGFkZHJlc3M9YCtpcCtgPC90ZD48L3RyPmApOwogICAgICAgICAgICB9CgogICAgICAgIH0pOwogICAgICAgICAkKCIjdGJscmVzdWx0IikuYXBwZW5kKCI8dHI+PHRkPjwvdGQ+PC90cj4iKTsKICAgICAgICAkKCIjcmVzdWx0Iikuc2hvdygpOwogICAgfQoKICAgIGZ1bmN0aW9uIGNvcHlUYWJsZShlbCkgewogICAgICAgIHZhciBib2R5ID0gZG9jdW1lbnQuYm9keSwgcmFuZ2UsIHNlbDsKICAgICAgICBpZiAoZG9jdW1lbnQuY3JlYXRlUmFuZ2UgJiYgd2luZG93LmdldFNlbGVjdGlvbikgewogICAgICAgICAgICByYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7CiAgICAgICAgICAgIHNlbCA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTsKICAgICAgICAgICAgc2VsLnJlbW92ZUFsbFJhbmdlcygpOwogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZUNvbnRlbnRzKGVsKTsKICAgICAgICAgICAgICAgIHNlbC5hZGRSYW5nZShyYW5nZSk7CiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdE5vZGUoZWwpOwogICAgICAgICAgICAgICAgc2VsLmFkZFJhbmdlKHJhbmdlKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoYm9keS5jcmVhdGVUZXh0UmFuZ2UpIHsKICAgICAgICAgICAgcmFuZ2UgPSBib2R5LmNyZWF0ZVRleHRSYW5nZSgpOwogICAgICAgICAgICByYW5nZS5tb3ZlVG9FbGVtZW50VGV4dChlbCk7CiAgICAgICAgICAgIHJhbmdlLnNlbGVjdCgpOwogICAgICAgIH0KICAgICAgICBkb2N1bWVudC5leGVjQ29tbWFuZCgiY29weSIpOwogICAgfQogICAgLy8gWW91ciBjb2RlIGhlcmUuLi4KfSkoKTsKCg==","requires":[{"meta":{"name":"jquery-3.4.1.min.js","url":"http://code.jquery.com/jquery-3.4.1.min.js","ts":1692411648417,"mimetype":"text/javascript"},"source":""}]},{"name":"Remove Link Target","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://pahe.li/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1689310404414,"data":{}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/3039-link-target-blank-to-removal/code/Link%20Target%20'blank'%20to%20removal.user.js","uuid":"bcdf80d9-ac3a-4537-822e-536f3ad49e7d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIFJlbW92ZSBMaW5rIFRhcmdldAovLyBAY3JlYXRvciAgICAgICAga291c2kKLy8gQGRlc2NyaXB0aW9uICAgIFJlbW92ZXMgdGFyZ2V0IGF0dHJpYnV0ZSBjb21wbGV0ZWx5LgovLyBAdmVyc2lvbiAgICAgICAgMS4wCgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vcGFoZS5saS8qCi8vID09L1VzZXJTY3JpcHQ9PQoKdmFyIGxpbmtzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2EnKTsKCmZvciAodmFyIGkgPSBsaW5rcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgewogICBsaW5rc1tpXS5yZW1vdmVBdHRyaWJ1dGUoInRhcmdldCIpOwp9"},{"name":"Menghilangkan Web Limit","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1689310404414,"data":{}},"enabled":false,"position":4,"file_url":"https://greasyfork.org/scripts/18886-menghilangkan-web-limit/code/Menghilangkan%20Web%20Limit.user.js","uuid":"904741cd-a0be-4c60-882b-b63ecd98ca6d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWVzcGFjZSAgICAgICAgIGh0dHA6Ly93d3cuZm9ybmVzaWEuY29tCi8vIEBuYW1lICAgICAgICAgICAgICBNZW5naGlsYW5na2FuIFdlYiBMaW1pdAovLyBAZGVzY3JpcHRpb24gICAgICAgTWVuZ2hpbGFuZ2thbiBsaW1pdCBwYWRhIHdlYnNpdGUgeWFuZyB0aWRhayBiaXNhIGNvcHksIGN1dCwgc2VsZWN0IHRoZSB0ZXh0LCByaWdodC1jbGljayBtZW51LgovLyBAaG9tZXBhZ2VVUkwgICAgICAgaHR0cDovL3d3dy5mb3JuZXNpYS5jb20KLy8gQHN1cHBvcnRVUkwgICAgICAgIGh0dHA6Ly93d3cuZm9ybmVzaWEuY29tCgovLyBAYXV0aG9yICAgICAgICAgICAgZm9ybmVzaWFmcmVhawovLyBAdmVyc2lvbiAgICAgICAgICAgMS4wCi8vIEBsaWNlbnNlICAgICAgICAgICBMR1BMdjMKLy8gQGNvbXBhdGlibGUgICAgICAgIGNocm9tZSBDaHJvbWVfNDYuMC4yNDkwLjg2ICsgVGFtcGVyTW9ua2V5Ci8vIEBjb21wYXRpYmxlICAgICAgICBmaXJlZm94IEZpcmVmb3hfNDIuMCArIEdyZWFzZU1vbmtleQovLyBAY29tcGF0aWJsZSAgICAgICAgb3BlcmEgT3BlcmFfMzMuMC4xOTkwLjExNSArIFRhbXBlck1vbmtleQovLyBAY29tcGF0aWJsZSAgICAgICAgc2FmYXJpCi8vIEBtYXRjaCAgICAgICAgICAgICAqOi8vKi8qCi8vIEBncmFudCAgICAgICAgICAgICBub25lCi8vIEBydW4tYXQgICAgICAgICAgICBkb2N1bWVudC1zdGFydAovLyA9PS9Vc2VyU2NyaXB0PT0KJ3VzZSBzdHJpY3QnOwoKdmFyIHJ1bGVzID0gewogIGJsYWNrX3J1bGU6IHsKICAgIG5hbWU6ICJibGFjayIsCiAgICBob29rX2V2ZW50TmFtZXM6ICIiLAogICAgdW5ob29rX2V2ZW50TmFtZXM6ICIiCiAgfSwKICBkZWZhdWx0X3J1bGU6IHsKICAgIG5hbWU6ICJkZWZhdWx0IiwKICAgIGhvb2tfZXZlbnROYW1lczogImNvbnRleHRtZW51fHNlbGVjdHxzZWxlY3RzdGFydHxjb3B5fGN1dHxkcmFnc3RhcnQiLAogICAgdW5ob29rX2V2ZW50TmFtZXM6ICJtb3VzZWRvd258bW91c2V1cHxrZXlkb3dufGtleXVwIiwKICAgIGRvbTA6IHRydWUsCiAgICBob29rX2FkZEV2ZW50TGlzdGVuZXI6IHRydWUsCiAgICBob29rX3ByZXZlbnREZWZhdWx0OiB0cnVlLAogICAgaG9va19zZXRfcmV0dXJuVmFsdWU6IHRydWUsCiAgICBhZGRfY3NzOiB0cnVlCiAgfQp9OwoKdmFyIGxpc3RzID0gewoKICBibGFja19saXN0OiBbCiAgICAvLipcLnlvdXR1YmVcLmNvbS4qLywKICAgIC90cmFuc2xhdGVcLmdvb2dsZVwuLiovCiAgXQp9OwoKdmFyIGhvb2tfZXZlbnROYW1lcywgdW5ob29rX2V2ZW50TmFtZXMsIGV2ZW50TmFtZXM7Cgp2YXIgc3RvcmFnZU5hbWUgPSBnZXRSYW5kU3RyKCdxd2VydHl1aW9wYXNkZmdoamtsenhjdmJubVFXRVJUWVVJT1BBU0RGR0hKS0xaWENWQk5NJywgcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDEyICsgOCkpOwoKdmFyIEV2ZW50VGFyZ2V0X2FkZEV2ZW50TGlzdGVuZXIgPSBFdmVudFRhcmdldC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcjsKdmFyIGRvY3VtZW50X2FkZEV2ZW50TGlzdGVuZXIgPSBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyOwp2YXIgRXZlbnRfcHJldmVudERlZmF1bHQgPSBFdmVudC5wcm90b3R5cGUucHJldmVudERlZmF1bHQ7CgovLyBIb29rIGFkZEV2ZW50TGlzdGVuZXIgcHJvYwpmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKHR5cGUsIGZ1bmMsIHVzZUNhcHR1cmUpIHsKICB2YXIgX2FkZEV2ZW50TGlzdGVuZXIgPSB0aGlzID09PSBkb2N1bWVudCA/IGRvY3VtZW50X2FkZEV2ZW50TGlzdGVuZXIgOiBFdmVudFRhcmdldF9hZGRFdmVudExpc3RlbmVyOwogIGlmKGhvb2tfZXZlbnROYW1lcy5pbmRleE9mKHR5cGUpID49IDApIHsKICAgIF9hZGRFdmVudExpc3RlbmVyLmFwcGx5KHRoaXMsIFt0eXBlLCByZXR1cm5UcnVlLCB1c2VDYXB0dXJlXSk7CiAgfSBlbHNlIGlmKHVuaG9va19ldmVudE5hbWVzLmluZGV4T2YodHlwZSkgPj0gMCkgewogICAgdmFyIGZ1bmNzTmFtZSA9IHN0b3JhZ2VOYW1lICsgdHlwZSArICh1c2VDYXB0dXJlID8gJ3QnIDogJ2YnKTsKCiAgICBpZih0aGlzW2Z1bmNzTmFtZV0gPT09IHVuZGVmaW5lZCkgewogICAgICB0aGlzW2Z1bmNzTmFtZV0gPSBbXTsKICAgICAgX2FkZEV2ZW50TGlzdGVuZXIuYXBwbHkodGhpcywgW3R5cGUsIHVzZUNhcHR1cmUgPyB1bmhvb2tfdCA6IHVuaG9va19mLCB1c2VDYXB0dXJlXSk7CiAgICB9CgogICAgdGhpc1tmdW5jc05hbWVdLnB1c2goZnVuYykKICB9IGVsc2UgewogICAgX2FkZEV2ZW50TGlzdGVuZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Cn0KCmZ1bmN0aW9uIGNsZWFyTG9vcCgpIHsKICB2YXIgZWxlbWVudHMgPSBnZXRFbGVtZW50cygpOwoKICBmb3IodmFyIGkgaW4gZWxlbWVudHMpIHsKICAgIGZvcih2YXIgaiBpbiBldmVudE5hbWVzKSB7CiAgICAgIHZhciBuYW1lID0gJ29uJyArIGV2ZW50TmFtZXNbal07CiAgICAgIGlmKGVsZW1lbnRzW2ldW25hbWVdICE9IG51bGwgJiYgZWxlbWVudHNbaV1bbmFtZV0gIT0gb254eHgpIHsKICAgICAgICBpZih1bmhvb2tfZXZlbnROYW1lcy5pbmRleE9mKGV2ZW50TmFtZXNbal0pID49IDApIHsKICAgICAgICAgIGVsZW1lbnRzW2ldW3N0b3JhZ2VOYW1lICsgbmFtZV0gPSBlbGVtZW50c1tpXVtuYW1lXTsKICAgICAgICAgIGVsZW1lbnRzW2ldW25hbWVdID0gb254eHg7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGVsZW1lbnRzW2ldW25hbWVdID0gbnVsbDsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0KCmZ1bmN0aW9uIHJldHVyblRydWUoZSkgewogIHJldHVybiB0cnVlOwp9CmZ1bmN0aW9uIHVuaG9va190KGUpIHsKICByZXR1cm4gdW5ob29rKGUsIHRoaXMsIHN0b3JhZ2VOYW1lICsgZS50eXBlICsgJ3QnKTsKfQpmdW5jdGlvbiB1bmhvb2tfZihlKSB7CiAgcmV0dXJuIHVuaG9vayhlLCB0aGlzLCBzdG9yYWdlTmFtZSArIGUudHlwZSArICdmJyk7Cn0KZnVuY3Rpb24gdW5ob29rKGUsIHNlbGYsIGZ1bmNzTmFtZSkgewogIHZhciBsaXN0ID0gc2VsZltmdW5jc05hbWVdOwogIGZvcih2YXIgaSBpbiBsaXN0KSB7CiAgICBsaXN0W2ldKGUpOwogIH0KCiAgZS5yZXR1cm5WYWx1ZSA9IHRydWU7CiAgcmV0dXJuIHRydWU7Cn0KZnVuY3Rpb24gb254eHgoZSkgewogIHZhciBuYW1lID0gc3RvcmFnZU5hbWUgKyAnb24nICsgZS50eXBlOwogIHRoaXNbbmFtZV0oZSk7CgogIGUucmV0dXJuVmFsdWUgPSB0cnVlOwogIHJldHVybiB0cnVlOwp9CgpmdW5jdGlvbiBnZXRSYW5kU3RyKGNocywgbGVuKSB7CiAgdmFyIHN0ciA9ICcnOwoKICB3aGlsZShsZW4tLSkgewogICAgc3RyICs9IGNoc1twYXJzZUludChNYXRoLnJhbmRvbSgpICogY2hzLmxlbmd0aCldOwogIH0KCiAgcmV0dXJuIHN0cjsKfQoKCmZ1bmN0aW9uIGdldEVsZW1lbnRzKCkgewogIHZhciBlbGVtZW50cyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCcqJykpOwogIGVsZW1lbnRzLnB1c2goZG9jdW1lbnQpOwoKICByZXR1cm4gZWxlbWVudHM7Cn0KCmZ1bmN0aW9uIGFkZFN0eWxlKGNzcykgewogIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgc3R5bGUuaW5uZXJIVE1MID0gY3NzOwogIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpOwp9CgpmdW5jdGlvbiBnZXRSdWxlKHVybCkgewogIGZ1bmN0aW9uIHRlc3RVcmwobGlzdCwgdXJsKSB7CiAgICBmb3IodmFyIGkgaW4gbGlzdCkgewogICAgICBpZihsaXN0W2ldLnRlc3QodXJsKSkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgaWYodGVzdFVybChsaXN0cy5ibGFja19saXN0LCB1cmwpKSB7CiAgICByZXR1cm4gcnVsZXMuYmxhY2tfcnVsZTsKICB9CgogIHJldHVybiBydWxlcy5kZWZhdWx0X3J1bGU7Cn0KCgpmdW5jdGlvbiBpbml0KCkgewoKICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLmhvc3QgKyB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7CiAgdmFyIHJ1bGUgPSBnZXRSdWxlKHVybCk7CgogIGhvb2tfZXZlbnROYW1lcyA9IHJ1bGUuaG9va19ldmVudE5hbWVzLnNwbGl0KCJ8Iik7CiAgLy8gVE9ETyBBbGxvd2VkIHRvIHJldHVybiB2YWx1ZQogIHVuaG9va19ldmVudE5hbWVzID0gcnVsZS51bmhvb2tfZXZlbnROYW1lcy5zcGxpdCgifCIpOwogIGV2ZW50TmFtZXMgPSBob29rX2V2ZW50TmFtZXMuY29uY2F0KHVuaG9va19ldmVudE5hbWVzKTsKCiAgaWYocnVsZS5kb20wKSB7CiAgICBzZXRJbnRlcnZhbChjbGVhckxvb3AsIDMwICogMTAwMCk7CiAgICBzZXRUaW1lb3V0KGNsZWFyTG9vcCwgMjUwMCk7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGNsZWFyTG9vcCwgdHJ1ZSk7CiAgICBjbGVhckxvb3AoKTsKICB9CgogIC8vIGhvb2sgYWRkRXZlbnRMaXN0ZW5lcgogIGlmKHJ1bGUuaG9va19hZGRFdmVudExpc3RlbmVyKSB7CiAgICBFdmVudFRhcmdldC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lciA9IGFkZEV2ZW50TGlzdGVuZXI7CiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcjsKICB9CgogIC8vIGhvb2sgcHJldmVudERlZmF1bHQKICBpZihydWxlLmhvb2tfcHJldmVudERlZmF1bHQpIHsKICAgIEV2ZW50LnByb3RvdHlwZS5wcmV2ZW50RGVmYXVsdCA9IGZ1bmN0aW9uKCkgewogICAgICBpZihldmVudE5hbWVzLmluZGV4T2YodGhpcy50eXBlKSA8IDApIHsKICAgICAgICBFdmVudF9wcmV2ZW50RGVmYXVsdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CiAgICB9OwogIH0KCiAgLy8gSG9vayBzZXQgcmV0dXJuVmFsdWUKICBpZihydWxlLmhvb2tfc2V0X3JldHVyblZhbHVlKSB7CiAgICBFdmVudC5wcm90b3R5cGUuX19kZWZpbmVTZXR0ZXJfXygncmV0dXJuVmFsdWUnLCBmdW5jdGlvbigpIHsKICAgICAgaWYodGhpcy5yZXR1cm5WYWx1ZSAhPSB0cnVlICYmIGV2ZW50TmFtZXMuaW5kZXhPZih0aGlzLnR5cGUpID49IDApIHsKICAgICAgICB0aGlzLnJldHVyblZhbHVlID0gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgfQoKICBjb25zb2xlLmRlYnVnKCd1cmw6ICcgKyB1cmwsICdzdG9yYWdlTmFtZe+8micgKyBzdG9yYWdlTmFtZSwgJ3J1bGU6ICcgKyBydWxlLm5hbWUpOwoKICBpZihydWxlLmFkZF9jc3MpIHsKICAgIGFkZFN0eWxlKCdodG1sLCAqIHstd2Via2l0LXVzZXItc2VsZWN0OnRleHQhaW1wb3J0YW50OyAtbW96LXVzZXItc2VsZWN0OnRleHQhaW1wb3J0YW50O30nKTsKICB9Cn0KCmluaXQoKTsK"},{"name":"Instagram Download Button","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.instagram.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1689310404414,"data":{}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/406535-instagram-download-button/code/Instagram%20Download%20Button.user.js","uuid":"75bf9b9c-d4f3-4a13-90f2-5f41a49921c5","source":""},{"name":"Spotify Downloader (without login)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["178-79-138-81.ip.linodeusercontent.com","self"],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://open.spotify.com/*","https://178-79-138-81.ip.linodeusercontent.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1691064387210,"data":{"CORS_locked":"bfalse"}},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/435650-spotify-downloader-without-login/code/Spotify%20Downloader%20(without%20login).user.js","uuid":"511d04eb-4e1a-4ff0-a8fd-ac1977bd13e8","source":"","requires":[{"meta":{"name":"FileSaver.min.js","url":"https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js","ts":1691064390302,"mimetype":"text/javascript"},"source":"KGZ1bmN0aW9uKGEsYil7aWYoImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZClkZWZpbmUoW10sYik7ZWxzZSBpZigidW5kZWZpbmVkIiE9dHlwZW9mIGV4cG9ydHMpYigpO2Vsc2V7YigpLGEuRmlsZVNhdmVyPXtleHBvcnRzOnt9fS5leHBvcnRzfX0pKHRoaXMsZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhLGIpe3JldHVybiJ1bmRlZmluZWQiPT10eXBlb2YgYj9iPXthdXRvQm9tOiExfToib2JqZWN0IiE9dHlwZW9mIGImJihjb25zb2xlLndhcm4oIkRlcHJlY2F0ZWQ6IEV4cGVjdGVkIHRoaXJkIGFyZ3VtZW50IHRvIGJlIGEgb2JqZWN0IiksYj17YXV0b0JvbTohYn0pLGIuYXV0b0JvbSYmL15ccyooPzp0ZXh0XC9cUyp8YXBwbGljYXRpb25cL3htbHxcUypcL1xTKlwreG1sKVxzKjsuKmNoYXJzZXRccyo9XHMqdXRmLTgvaS50ZXN0KGEudHlwZSk/bmV3IEJsb2IoWyJcdUZFRkYiLGFdLHt0eXBlOmEudHlwZX0pOmF9ZnVuY3Rpb24gYyhhLGIsYyl7dmFyIGQ9bmV3IFhNTEh0dHBSZXF1ZXN0O2Qub3BlbigiR0VUIixhKSxkLnJlc3BvbnNlVHlwZT0iYmxvYiIsZC5vbmxvYWQ9ZnVuY3Rpb24oKXtnKGQucmVzcG9uc2UsYixjKX0sZC5vbmVycm9yPWZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcigiY291bGQgbm90IGRvd25sb2FkIGZpbGUiKX0sZC5zZW5kKCl9ZnVuY3Rpb24gZChhKXt2YXIgYj1uZXcgWE1MSHR0cFJlcXVlc3Q7Yi5vcGVuKCJIRUFEIixhLCExKTt0cnl7Yi5zZW5kKCl9Y2F0Y2goYSl7fXJldHVybiAyMDA8PWIuc3RhdHVzJiYyOTk+PWIuc3RhdHVzfWZ1bmN0aW9uIGUoYSl7dHJ5e2EuZGlzcGF0Y2hFdmVudChuZXcgTW91c2VFdmVudCgiY2xpY2siKSl9Y2F0Y2goYyl7dmFyIGI9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoIk1vdXNlRXZlbnRzIik7Yi5pbml0TW91c2VFdmVudCgiY2xpY2siLCEwLCEwLHdpbmRvdywwLDAsMCw4MCwyMCwhMSwhMSwhMSwhMSwwLG51bGwpLGEuZGlzcGF0Y2hFdmVudChiKX19dmFyIGY9Im9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvdy53aW5kb3c9PT13aW5kb3c/d2luZG93OiJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZi5zZWxmPT09c2VsZj9zZWxmOiJvYmplY3QiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWwuZ2xvYmFsPT09Z2xvYmFsP2dsb2JhbDp2b2lkIDAsYT1mLm5hdmlnYXRvciYmL01hY2ludG9zaC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSYmL0FwcGxlV2ViS2l0Ly50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpJiYhL1NhZmFyaS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxnPWYuc2F2ZUFzfHwoIm9iamVjdCIhPXR5cGVvZiB3aW5kb3d8fHdpbmRvdyE9PWY/ZnVuY3Rpb24oKXt9OiJkb3dubG9hZCJpbiBIVE1MQW5jaG9yRWxlbWVudC5wcm90b3R5cGUmJiFhP2Z1bmN0aW9uKGIsZyxoKXt2YXIgaT1mLlVSTHx8Zi53ZWJraXRVUkwsaj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7Zz1nfHxiLm5hbWV8fCJkb3dubG9hZCIsai5kb3dubG9hZD1nLGoucmVsPSJub29wZW5lciIsInN0cmluZyI9PXR5cGVvZiBiPyhqLmhyZWY9YixqLm9yaWdpbj09PWxvY2F0aW9uLm9yaWdpbj9lKGopOmQoai5ocmVmKT9jKGIsZyxoKTplKGosai50YXJnZXQ9Il9ibGFuayIpKTooai5ocmVmPWkuY3JlYXRlT2JqZWN0VVJMKGIpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtpLnJldm9rZU9iamVjdFVSTChqLmhyZWYpfSw0RTQpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKGopfSwwKSl9OiJtc1NhdmVPck9wZW5CbG9iImluIG5hdmlnYXRvcj9mdW5jdGlvbihmLGcsaCl7aWYoZz1nfHxmLm5hbWV8fCJkb3dubG9hZCIsInN0cmluZyIhPXR5cGVvZiBmKW5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iKGIoZixoKSxnKTtlbHNlIGlmKGQoZikpYyhmLGcsaCk7ZWxzZXt2YXIgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7aS5ocmVmPWYsaS50YXJnZXQ9Il9ibGFuayIsc2V0VGltZW91dChmdW5jdGlvbigpe2UoaSl9KX19OmZ1bmN0aW9uKGIsZCxlLGcpe2lmKGc9Z3x8b3BlbigiIiwiX2JsYW5rIiksZyYmKGcuZG9jdW1lbnQudGl0bGU9Zy5kb2N1bWVudC5ib2R5LmlubmVyVGV4dD0iZG93bmxvYWRpbmcuLi4iKSwic3RyaW5nIj09dHlwZW9mIGIpcmV0dXJuIGMoYixkLGUpO3ZhciBoPSJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0iPT09Yi50eXBlLGk9L2NvbnN0cnVjdG9yL2kudGVzdChmLkhUTUxFbGVtZW50KXx8Zi5zYWZhcmksaj0vQ3JpT1NcL1tcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO2lmKChqfHxoJiZpfHxhKSYmInVuZGVmaW5lZCIhPXR5cGVvZiBGaWxlUmVhZGVyKXt2YXIgaz1uZXcgRmlsZVJlYWRlcjtrLm9ubG9hZGVuZD1mdW5jdGlvbigpe3ZhciBhPWsucmVzdWx0O2E9aj9hOmEucmVwbGFjZSgvXmRhdGE6W147XSo7LywiZGF0YTphdHRhY2htZW50L2ZpbGU7IiksZz9nLmxvY2F0aW9uLmhyZWY9YTpsb2NhdGlvbj1hLGc9bnVsbH0say5yZWFkQXNEYXRhVVJMKGIpfWVsc2V7dmFyIGw9Zi5VUkx8fGYud2Via2l0VVJMLG09bC5jcmVhdGVPYmplY3RVUkwoYik7Zz9nLmxvY2F0aW9uPW06bG9jYXRpb24uaHJlZj1tLGc9bnVsbCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bC5yZXZva2VPYmplY3RVUkwobSl9LDRFNCl9fSk7Zi5zYXZlQXM9Zy5zYXZlQXM9ZywidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmKG1vZHVsZS5leHBvcnRzPWcpfSk7CgovLyMgc291cmNlTWFwcGluZ1VSTD1GaWxlU2F2ZXIubWluLmpzLm1hcA=="}]},{"name":"Bypass All Shortlinks","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["*://studio.youtube.com/*","*://*.vosan.co/"],"orig_includes":["/^(https?:\\/\\/)(tmearn|makemoneywithurl|shrinkearn|techcyan|link4m|kingsleynyc|modcombo|healthy4pepole|kiktu|1bitspace|pennbookcenter|publicananker|mikl4forex|michaelemad|miklpro|forex-golds|mosqam|semawur|newassets.hcaptcha|challenges.cloudflare|riviwi|doshrink|tophostingapp|calmgram|techmny|forex-trnd|literaturetimes|onlineincoms|modsfire|adneow|short.clickscoin|adclickersbot|mobitaak|modebaca|paylinnk|pubiza|100puan|viralxns|cuts-url|popimed|toryxlink|aduzz|lycoslink|cdrab|ibrabucks|ethiomi|shortenbuddy|kiemlua|smoner|djbhojpurisongs|modsbase|ac.totsugeki|bcvc2|earnwithshortlink|bitzite|link1s|diadiemcheckin|tudiendanhngon|chooyomi|staaker|lucidcam|forexlap|forexmab|linkjust|admediaflex|rekonise|nostralink|bitcotasks|saa3at|mensventure|playpaste|forex-articles|ponselharian|liinkat|thegoneapp|mobi2c|studyuo|hookeaudio|thehostingmentor|linkshortify|mohtawaa|sodocasino68z|dz4link|foodxor|short1s|cr3zyblog|w88th2|fc-lc|expertvn|downphanmem|healdad|ez4mods|try2link|soft3arbi|techyadjectives|ex-foary|crypto4tun|blogmado|itsguider|mgnetu|infinitycoupon|videoslyrics|paid4link|coin-free|1xfaucet|cafenau|techacode|sevenjournals|7misr4day|trflink|get4links|memangbau|world2our|vavada5com|shortlite|bitefaucet|nguyenvanbao|pubgquotes|gaminginfos|sama-pro|shtfly|bestmobilenew|olhonagrana|chedrives|adrinolinks|techloadz|atglinks|nulledsafe|dreamcheeky|cutpaid|fidlarmusic|rodjulian|webhostingpost|tremamnon|samaa-pro|techrfour|ez4short|skincarie|techrayzer|shorteet|puggygaming|tranquangchuan|blogginglass|1shorten|loptelink|charexempire|shotzon|appsblaze|wellness4live|yummy-reciepes|link.bigboxnet|bioinflu|chamcuuhoc|litexblog|7nything|ezeviral|urlsopen|1shortlink|linkerload|filenext|doodshort|kienthucrangmieng|themorningtribune|gamalk-sehetk|adsafelink|cbshort|checkscoin|llinkon|links.apksvip|anhdep24|letsiu|earncryptowrs|cutdomain|usersdrive|uploadrar|bayfiles|krakenfiles|post.copydev|icutlink|short-zero|insurancevela|poketoonworld|arahtekno|mopahealth|nghiencar|educur|gpfaucet|bstlar|uploadhaven|aceskip|apk.miuiku|ecwizon|oncehelp|cutwin|reshort|otomi-games|sportsmediaz|big2short|techymozo|novelsapps|tirailangit|intercelestial|tribuntekno|bestcash2020|hoxiin|fooot-map|priefy|uptobox|1fichier|freebrightsoft|dz-linkk|chinhnhacoban|autodime|cortaly|link.3dmili|indianshortner|shortyearn|mp4upload|myshrinker|url.namaidani|userscloud|newworldnew|mkomsel|niinga|uppit|donia-tech|donia2tech|donia2link|btafile|pdiskshortener|aljoodm98|fx4vip|shortzon|up4cash|newsharsh|examkhata|linksht|note1s|teknosimple|discordserv|wikitraveltips|bantenexis|weadown|websiu|link.turkdown|pdfcoffee|faucetgigs|huongdanvuotlink123.blogspot|cuanhapkhau|traffic1s|leaveadvice|coins-town|zero-short|esopress|appsinsta|link-yz|apkadmin|ayelads|gawbne|anonfiles|sharemods|ddownload|asideway|drive.google|safe.intipanime|workupload|filedm|beingtek|sub2get|bindaaslinks|ex-load|xdabo|social-unlock|short-jambo|lyricsbaazaar|aprovax|vn88goat|shrinklo|xemsport|adpaylink|yxoshort|mdiskurl|blog.greenenez|vosliens.mykvostfr|cashlinko|ggoklink|mneylink|best-cpm|clicksfly|megaupto|ufacw|techcartz|softechbharat|okrzone|adshnk|sub2unlock|oydisk|besargaji|dare2qualify|netpopads|adflyfly|monimag|mo3dati|8raa|ikrey|tipsli|urlpayout|urlpoints|hocbeauty|95news|link.get4llink|shrt10|imgbsr|linknih|lessurl|techkeshri|shrinkgold|itechmafiia|link4earn|hosting4lifetime|oyunfilmindir|tecnicalboy|maxurlz|mr-forex|leadcricket|tackaway|88betbongda|sodovns|iwin68m|shrinkcash|dhlgame|bloginkz|blogtechh|hypershort|shorteurl|adrate|slinkware|foodupe|rshrt|dr-forex|indiajobagency|dz4link1|xpshort|urlshortx|getloanmoney|cryptst|blog.freeoseocheck|forex1pro|bico8|web1s|gogodl|infinityskull|doodjob|link2m|krownlinks|cut-shortlink|lollty|sheralinks|leitup|dev.miuiflash|upfilesurls|techyreviewx|shortox|bankvacency|bitcoinwinco|3rabsports|crazysonglyrics|vnpttelle|forexrw7|gpl-market|timeforearn|link4m|amritadrino|tutorialsaya|revadvert|fx-22|encurtandourl|mixrootmods|mealcold|cutpaidad|allsoftdrivers|cryptfaucet|hotmediahub|tai-mui-hong|adrevlnks|w88linkz|vailonxx|hocreview|sodo66vn|gyanilinks|hamrolekh|minersim|heenglish|comohoy|appkamods|entutes|coinsrev|komikman|bicolink|reshortfly|khoruou-gourmet|contentmenarik|altechen|socialwolvez|lifeezee|rsfinanceinfo|rssoftwareinfo|rshostinginfo|bk8goat|camnangvay|pixeldrain|finoxpert|zegtrends|blackleadr|nestshortener|shortcuthigh|perokokbijak|mneyvip|paste1s|rsshort|rsinsuranceinfo|rsadnetworkinfo|rseducationinfo|adwerty|devuploads|mega4upload|dropgalaxy|houseofblogger|crypto4yu|doodrive|wooseotools|tvseriesnmoviesdl|tgshortener|anchurl|neverdims|coincroco|syflink|adlvy|manofadan|api-secure.solvemedia|yogablogfit|alivedesktop|cut-fly|7r6|linkmonetizers|mcafee-com|mrproblogger)(\\.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(zolomix|cararegistrasi|5golink|birdurls|snkra|artiskini|sh2rt|byboe|medcpu|nousdecor|jobswd|gkqnaexam|imperialstudy|linktrims|eda-ah|restorbio|bdnewsx|upshrink|gifans|ovlinks|imagenesderopaparaperros|yofaurls|digiromotion|wingifta|rancah|delishwell|solidfiles|ourtecads|zubatecno|covemarkets|disheye|askpaccosi|gets4link|elwatanelyoum|ledifha|crypturls|zombiebtc|techwhom|claimbtcbits|techsamir|techymedies|gamelopte|snowurl|claimfey|panylink|wrbloggers|tokenoto|saly-cash|nyawang|kongutoday|softwaresolutionshere|insuranceleadsinfo|bitcosite|clink1|upmienphi|coinsward|clink2|gadgetsreview27|anywho-com|teamtechnews|upload-4ever|admediaflex|btcpany|assettoworld|vikashmewada|linkyearn|appsbull|gam3ah|tinybc|diudemy|hereofamily|urlcorner|phsensei|4shared|ta2deem7arbya|solarchaine|file-upload|shorterall|tribuncrypto|cempakajaya|safelinkduit|adshorturl|linkbnao|tinycmd|cloudshrinker|proviralhost|technicalatg|v2links|ytsubme|rainurl|arahlink|m4cut|teachsansar|web9academy|shortxlinks|flyrar|pythondunyasi|on-scroll|shrtfly|shrinkclick|adsquite|earnash|hipsonyc|sonicbtc|menjelajahi|financerites|itscybertech|dash-free|sekilastekno|almontsf|cash4share|linkwards|freevpshere|kredilerim|porterfuneralhomee|aghtas|proappapk|cskua|toilaquantri|youssefsayed|aracodes|financenube|wiki-topia|pinloker|publicearn|uploadsoon|paid4file|gyanitheme|howifx|vocalley|factsdunya|blogyindia|networkhint|pernahsukses|vnshortener|gamingwithtr|udrop|rezence|businessnews-nigeria|elmokhbir|forexscp|youtube|pnfreegames|miuiflash|ishortify|thebindaas|vipalalmania|viewfr|startoshi|bakumoney|adbitfly|shrinkads|newsturbovid|mazen-ve3|thefastpost|encurtaclik|wiour|mtraffics|povathemes|viewboonposts|maqal360|sahityt|techhadi|lolinez|manga2day|rapid-cut|filepresident|earn2me|shorturllinks|suaurl)(\\.com)(\\/.*)/","/^(https?:\\/\\/)(ourcoincash|1manga|watchdoge|arenaboard|ccsl|adsgo|shon|crypto-faucet|bingeflix|studystar|bflinks|linkawynet|stryt|stfly|deltabtc|short-cash2|wizzly|mgnet|crypteen|dogeen|fauceteen|cutdl|sportawy|fexkomin|technemo|zoomcrypto|techboyz|99links|bastinews|offrcms|tsinfo|shortnow|shortlinkto|post.nites-tv|shortplus|technoloy|techyuth|stores.filmyzilla-in|swzz|acortame|alghtas|wizly|horanews|short2fly|bcvc|healthbloog|mmdrive|satoshi-hunter|0uq|blog.movies-near-me|st.kleaco|playlink|link2money|mkvlinks|nabits|welovecrypto|short2url|egstar|playdisk|gibit|studyis|kukslincs|magictoshi|eduqqq|nishankhatri|techthematter|moinsider|satoshi-win|my-coins|cryptofenz|fc-lc)(\\.xyz)(\\/.*)/","/^(https?:\\/\\/)(.+)?(senuansatechno|claimercorner|shortly|doctorcoin|speedynews|1apple|ffworld|textpage|fidovy|pcomnews|adshorti|sapica|earnfacut|urlbharat|dropz|chainfo|techleets|earnl|shortpay|modmakers|kyshort|trxking|aoutoqw|healthysamy|coin2pay|tsinfo|financeandinsurance|mangafun|opli|beycoin|myartical|insurancepost|lifeinsurancesblog)(\\.xyz)(\\/.*)/","/^(https?:\\/\\/)(techydino|world-trips|yoshare|lets.5get|crypto-fi|wpcheap|coinmasterx|catcut|aztravels|dulichkhanhhoa|sub2unlock|dataupload|forex-gold|7apple|ccurl|link1s|url.namaidani|adskip|hurirk|usfinf|xervoo|hexupload|eloism|cutt|forexshare|blog.cryptowidgets|neexulro|dailyuploads|douploads|simfileshare|fir3|magybu|racaty|linegee|blogesque|thuocdangian|altblogger|letsboost|conghuongtu|vinaurl|tecmundo|try2link|blog.coinsvalue|khaddavi|8tm|traffic24h|shortearn|cut-y|megadb|cpmlink|blog.webfreetools|rslinks|dupload|userupload|oaxyteek|xonnews|yosite|cryptopaid|bluetechno|w88vnz|tmearn|click1s|turbobit|megaup|hitfile|v2guides|cutearn|hislink|financeyogi|sahlmarketing|rapidgator|blogbux|otechno|fileresources|freepreset)(\\.net)(\\/.*)/","/^(https?:\\/\\/)(.+)?(digitalnaz|owllink|mozlink|cryptosats|rocklinks|celinks|jiotech|bitcomarket|illink|jemari|paid4link|link3s|boscoin|linkrex|fire-link|urlw|pilinks|linkshortify|youshort|bicolink|cookinguide|indiurl.in|vip-link|themezon|tnshort|makeupguide|carstopia|btcsatoshi|hostadviser|carsmania|file-upload|up-4ever)(\\.net)(\\/.*)/","/^(https?:\\/\\/)(tnlink|jrlinks|qualitystudymaterial|missionhight|wpking|zagl|streamshort|cutp|earnmoj|cplink|cryptomonitor|linkshortify|htlinks|linkocean|djxmaza|bildirim|battlechamp|sahilsumra|kerdlinfo|urlcut|insurancevlog|itechlogic|videolyrics|tekcrypt|missionhight|gplinks|moddingzone|adybrands|gz2|dulink|aclinks|hidelinks|shortearn|u.apgy|modzilla|thebestwishes|mrdoge|s2fly|filerio|thebloggerspoint|jslink|moviesnew|technocubes|afly|healthynepal|djnonstopmusic|omegalinks|jobform|kingbit.co|du-link|ouoi|by6|adrinolinks|rklinks|mymobilehub|techdaze|link4earn|rupamobile|examsolution|earn4link|kalvidudes|techwithsanikant|ibyt|flyurl|cosmictap|naukrilelo|nanolinks|cutp|linkpays|trends99|link.skm4u.co|linkwards.co|computerpedia|apkupload|banaraswap|jobphoria|techincubator|bookszone|file-upload|freebitco|apna-blog|earn4clicks|adbitfly|greylinks|djqunjab)(\\.in)(\\/.*)/","/^(https?:\\/\\/)(.+)?(cashurl|bitcoinly|crazyblog|zolomix|technologylover|expertlinks|largestpanel|rsrlink|short2url|99links|enit|url2go|tnvalue|pvidly|apurl|urlinked|mdlink|gamerfang|writedroid|teckypress|fixno|paisakamalo|inkik|shrinkforearn|easysky|mdiskplayer|akcartoons|open2get|adzz|qora|insurancegold|smallinfo|filmypoints|linkshild|viplink|cuturl|e2share|shorturllink|opiniontoday|theforyou|sigmalinks|financerites|cordtpoint.co|mdisk.net|techyinfo|btcbitco|apnashortener|megafly|megaurl|tplinks|tnlinks|meclipstudy|v2links|finclub|greymatterslinks|shareus|apanmusic|shrinkbit)(\\.in)(\\/.*)?/","/^(https?:\\/\\/)(.+)?(scratch247|azmath|mobilereview|inform3tion|shortlinkto|wez|bitcrypto|cooklike|videoclip|brbushare|fanclup|nulledlist|coinscap|1short|69vn|web1s|missreview|every-crypto|ajlinks|bit4me|sportweb)(\\.info)(\\/.*)/","/^(https?:\\/\\/)(exee.my|onlineteori.my|karyawan.co|rotator.nurul-huda.sch|activity.my|massive.my|caview.my|nesiaku.my|lewati|arahlink|linkk|free4u.nurul-huda.or|link.nesia.my|omdata.my|mydata.my|healthydad.my|lajangspot.web|mbantul.my)(\\.id)(\\/.*)/","/^(https?:\\/\\/)(.+)?(suratresmi|carapedi|salink|mycut.my|apasih.my|indofaucet.my|wapka|tonanmedia.my)(\\.id)(\\/.*)/","/^(https?:\\/\\/)(aylink|mynewsmedia|gtlink|droplink|123link|linksfy|adshorti|hxfile|dosya|takem|dausel|modlink|slwatch|5tl|desiupload|tech5s|9-animie|veganho|nulledmod|veganac|dealprice|arabplus2|cut-y|adshort|sub2me|gplinks|web1s|ku11net|mixdrop)(\\.co)(\\/.*)/","/^(https?:\\/\\/)(.+)?(takez|linksfire|vosan|tinygo|veganab|adfloz|fexkomin|linksly|finsurances)(\\.co)(\\/.*)/","/^(https?:\\/\\/)(girls-like|gobits|zoss|tlin|terafly|petafly|gigafly|adnews|papanews|panyflay|mozzfly|shortus|short.croclix|best-news|4cash|mega-news|wildblog|dddrive|linkpoi|m.newhit|mboost|linkshorts|exafly|nonofly|lozzfly|uptomega|stfly|adbull|youshort|health-and|cutx|adsk|linkfly|appdrive|shorter.earn-hub|pkin|cashando|hunterkiller|acortalink|ar-goal|linkdam|adzully|adbully|zumpa|botfly|weezo|gtlinks|krownlinks|blog24|sh24|slfly|dbree|yudiblog)(\\.me)(\\/.*)/","/^(https?:\\/\\/)(.+)?(theconomy|richlink|qnix|hatelink|rb7|shrinke|skiplink)(\\.me)(\\/.*)/","/^(https?:\\/\\/)(newforex|wplink|nbyts|wealthystyle|clicksfly|happy-living|webcoin.coinrain|teacherana|earnow|earn-cash|yourtechnology|apks|network-earn|shopforex|o-pro|wedocrypto|softindexsite|ea-shorter.earn-hub|kooora365|flylinks|earn-bitcoin|ludofantsypk|panytourism|wikiversity|exactpay|seulink)(\\.online)(\\/.*)/","/^(https?:\\/\\/)(.+)?(readi|linkmumet|shorte|battleroyal|kjcrypto|litecoinly|techeysub|forexit|o-pro)(\\.online)(\\/.*)/","/^(https?:\\/\\/)(sitr|downfile|savelink|linkshortify|shareus|mobileprice|mynurse|short1|forextrader|shortener.goldcontent|lksfy|1xlink|savelink|busthings|icerik|adfly)(\\.site)(\\/.*)/","/^(https?:\\/\\/)(.+)?(cekip|link4rev|coin-city|urlcash|alwrificlick|softindex|promo-visits|bluemediafile|flyearn|claimbits|shtfly)(\\.site)(\\/.*)/","/^(https?:\\/\\/)(bluemediafile|tourismtravels1|tourismtravels2|tourismtravels3|tourismtravels4|tourismtravels5|tourismtravels9|filepress)(\\.sbs)(\\/.*)/","/^(https?:\\/\\/)(earnme|sanoybonito|automotur|kooza|1link|zentum|forexwaw|megatube|88bet1|clicknupload)(\\.club)(\\/.*)/","/^(https?:\\/\\/)(.+)?(usanewstoday|kadal|webhostingtips|mytop5)(\\.club)(\\/.*)/","/^(https?:\\/\\/)(adrev|paid4|yousm|coinpayz|tr|tfly|sox|clk.dti|besturl|boostme|takefile|appo|linkshortifyx|panyshort|mdiskshortner|leit|shortano|shortino|streamcheck|bildirim|healthmart)(\\.link)(\\/.*)/","/^(https?:\\/\\/)(.+)?(vshort|stex|cash4|zuba|adsen|shrinkme|shrs|xcut)(\\.link)(\\/.*)/","/^(https?:\\/\\/)(shurt|shortit|adsy|bitlinks|clik|playstore|megalink|link4)(\\.pw)(\\/.*)/","/^(https?:\\/\\/)(.+)?(prz|pong|insfly|wts|sollink|linkvor)(\\.pw)(\\/.*)/","/^(https?:\\/\\/)(linkshor|cortlink|moneylink)(\\.tk)(\\/.*)/","/^(https?:\\/\\/)(.+)?(madfaucet|mineshor)(\\.tk)(\\/.*)/","/^(https?:\\/\\/)(onimports|link.encurtaon|economiarelevante)(\\.com\\.br)(\\/.*)/","/^(https?:\\/\\/)(.+)?(kiiw|passgen|wordcounter|shrink|revcot|clickzu|shortzu|flyzu|cpm|viply)(\\.icu)(\\/.*)/","/^(https?:\\/\\/)(tny|tinyurl)(\\.so)(\\/.*)/","/^(https?:\\/\\/)(.+)?(zshort|claimcrypto|cashearn|1ink|linkpay|moneylink|intnews|openload|linkspy|letsupload|linx|upvid|adurly|getlink|stfly)(\\.cc)(\\/.*)/","/^(https?:\\/\\/)(exey|ezlinks|techmody|ouo|uploady|racaty|1short|earnlink|casinotructuyen|vn88|blitly|getdashcoin|saly|cuty|oke|letsupload|eio|oii|exe|viplinks|shrinkme|up-load|gofile|apkmody|easycut)(\\.io)(\\/.*)/","/^(https?:\\/\\/)(.+)?(linkfly|usalink|shorti|datacheap)(\\.io)(\\/.*)/","/^(https?:\\/\\/)(cryptoad|wikile|uploadev|mega4upr|cshort|payskip|homeairquality|shortearn|roll.btc25|sl.btc25|earnsfly|sl2.btc25|bugatti.eu|linkbong88moinhat|oploverz|kusonime|komikindo|multiup|novafile)(\\.org)(\\/.*)/","/^(https?:\\/\\/)(.+)?(medipost|shrinkurl|keeplinks|rajdlsg|readbitcoin|writedroid.eu|modmania.eu)(\\.org)(\\/.*)/","/^(https?:\\/\\/)(jameeltips|mitly|adfoc|link4fun|shrinke|siiu|vzu)(\\.us)(\\/.*)/","/^(https?:\\/\\/)(.+)?(yalla-shoot-now|forexeen|jaelink|link2u)(\\.us)(\\/.*)/","/^(https?:\\/\\/)(.+)?(adshort|1bit|2the|careerhunter|galaxy-link|adz7short|oscut|cryptonworld|dutchycorp)(\\.space)(\\/.*)/","/^(https?:\\/\\/)(noweconomy|deportealdia|adshort|ay|pngit|pndx|tyzen|shivshakti)(\\.live)(\\/.*)/","/^(https?:\\/\\/)(.+)?(earnads|genpassword|shrlink|punyamerk|shortnow|freeltc|forexfiter)(\\.top)(\\/.*)/","/^(https?:\\/\\/)(freelitecoin|uplinkto|1Link|dropgalaxy|smartlink|1mlink)(\\.vip)(\\/.*)/","/^(https?:\\/\\/)(faucetcrypto|bildirim|beta.shortearn)(\\.eu)(\\/.*)/","/^(https?:\\/\\/)(nex-url|olamovies|atrologyrex)(\\.cyou)(\\/.*)/","/^(https?:\\/\\/)(antonimos|blog.hostratgeber|sinonimos)(\\.de)(\\/.*)/","/^(https?:\\/\\/)(webmobile|dailytime)(\\.store)(\\/.*)/","/^(https?:\\/\\/)(.+)?(flyad|lootcash|manylink)(\\.vip)(\\/.*)/","/^(https?:\\/\\/)(romania|met|warp)(\\.bz)(\\/.*)/","/^(https?:\\/\\/)(2ad|viya|17o)(\\.ir)(\\/.*)/","/^(https?:\\/\\/)(adshrink|cutin)(\\.it)(\\/.*)/","/^(https?:\\/\\/)(pingit|files|upo)(\\.im)(\\/.*)/","/^(https?:\\/\\/)(clk|9xupload|mg188|adbrite)(\\.asia)(\\/.*)/","/^(https?:\\/\\/)(aii|clk|oko|ctr|mexa|sht|pro)(\\.sh)(\\/.*)/","/^(https?:\\/\\/)(iir|tei|ier|ckk)(\\.ai)(\\/.*)/","/^(https?:\\/\\/)(.+)?(upload|prx)(\\.ee)(\\/.*)/","/^(https?:\\/\\/)(.+)?(ptr|mdn|neonime)(\\.lol)(\\/.*)/","/^(https?:\\/\\/)(.+)?(goo|oxy)(\\.st)(\\/.*)/","/^(https?:\\/\\/)(.+)?(paylinks|oxy)(\\.cloud)(\\/.*)/","/^(https?:\\/\\/)(.+)?(mdn|insurance4u)(\\.world)(\\/.*)/","/^(https?:\\/\\/)(.+)?(cryptofuns|cryptonetos)(\\.ru)(\\/.*)/","/^(https?:\\/\\/)(.+)?(mirrored|clicknupload|sumoweb|streamhide|hec)(\\.to)(\\/.*)/","/^(https?:\\/\\/)(.+)?(ouo|forextrader|daga88)(\\.today)(\\/.*)/","/^(https?:\\/\\/)(.+)?(techgeek|adsgo|seulink)(\\.digital)(\\/.*)/","/^(https?:\\/\\/)(.+)?(goto.com|nishankhatri.com)(\\.np)(\\/.*)/","/^(https?:\\/\\/)(.+)?(360shortlink|myra|morunique|tmpfree|reeshort)(\\.cf)(\\/.*)/","/^(https?:\\/\\/)(.+)?(i8l|clk|pi-l|bcvc|modli|beast|boost|uptobhai|work|5tl|gainl)(\\.ink)(\\/.*)/","/^(https?:\\/\\/)(.+)?(mhma12|surflink|techtrim|adcash|yotrickslog|shortlinks|pdiskpage)(\\.tech)(\\/.*)/","/^(https?:\\/\\/)(kiw|redir.123file|cutl)(\\.li)(\\/.*)/","/^(https?:\\/\\/)(fc|fcc)(\\.lc)(\\/.*)/","/^(https?:\\/\\/)(adz|komikcast)(\\.moe)(\\/.*)/","/^(https?:\\/\\/)(1dogecoin|faucet|cpu-miner.leaks)(\\.work)(\\/.*)/","/^(https?:\\/\\/)(.+)?(123link|mtagang|shorturl)(\\.biz)(\\/.*)/","/^(https?:\\/\\/)(.+)?(3shorturl|earnbitcoin)(\\.gq)(\\/.*)/","/^(https?:\\/\\/)(.+)?(exe|exee|exep|exeo|upfiles|cutty|linkfly|rsgamer|exego)(\\.app)(\\/.*)/","/^(https?:\\/\\/)(.+)?(makeeasybtc|softindex|techus|cryptorotator)(\\.website)(\\/.*)/","/^(https?:\\/\\/)(linka|xtrabits|skipads|softindex|elinks|freecc|ccshort|clicknupload|workink|filepress|coinsl|adbitfly)(\\.click)(\\/.*)/","/^(https?:\\/\\/)(.+)?(easysl|adlink|adzilla|urlcash|freebitcoin|urlcashh|revly|jetmedia)(\\.click)(\\/.*)/","/^(https?:\\/\\/)(.+)?(hamody|nathanaeldan|freddyoctavio|davisonbarker|clks|cryptosh|bestfonts|gitlink|openurl|bitads|afly|mdisk|earnify|inshort)(\\.pro)(\\/.*)/","/^(https?:\\/\\/)(claim|pricenews|alaashow|bitclick|adsbtc|moburl|clicklink|bitcoinfaucet|linkmatic|linkpress|terabox|exalink|oscut)(\\.fun)(\\/.*)/","/^(https?:\\/\\/)(.+)?(apkmody|freetrx)(\\.fun)(\\/.*)/","/^(https?:\\/\\/)(.+)?(up-load|zcash|mdisk|holdtoearn|g4z)(\\.one)(\\/.*)/","/^(https?:\\/\\/)(linkati|curto|mg188|freebitcoin|bigbtc|firefaucet)(\\.win)(\\/.*)/","/^(https?:\\/\\/)(zonearn|hynews)(\\.biz)(\\/.*)/","/^https:\\/\\/linkvertise\\.com\\/(1|2|3|4|5|6|7|8|9)/","/^(https?:\\/\\/)(.+)?(nhacaiuytin|sv388)(\\.ac)(\\/.*)/","/^(https?:\\/\\/)(.+)?(mediafire)(\\.com)\\/(download|file)/","/^(https?:\\/\\/)(.+)?(cryptocurrencytracker|freefaucet)(\\.biz)\\/(link)/","/^(https?:\\/\\/)(.+)?(thanglonggroup|bigone|kienvang|silcot.com|bemom.com|sunflowersteiner.edu)(\\.vn)(\\/.*)/","/^(https?:\\/\\/)(.+)?(clickscoin|offeroc|cryptotyphoon|softairbay)(\\.com)\\/(short)/"],"orig_matches":["*://al.ly/*","*://za.gl/*","*://c2g.at/*","*://tii.la/*","*://send.cm/*","*://adoc.pub/*","*://files.fm/*","*://1gom.shop/*","*://slink.bid/*","*://ouo.press/*","*://7cc.96.lt/*","*://gktech.uk/*","*://one88.day/*","*://giti.works/*","*://tinyurl.is/*","*://*.gdtot.cfd/*","*://share4u.men/*","*://filemoon.sx/*","*://getzen.cash/*","*://quesignifi.ca/*","*://*.zippysha.re/*","*://uplinkto.hair/*","*://litecoin.host/*","*://drop.download/*","*://linkshrink.ca/*","*://*/*?xref=*&sl=*","*://short.express/*","*://*.coinhub.wiki/*","*://urlcashh.quest/*","*://arbweb.info/sl/*","*://*.cizgifilm.tv/*","*://downloads.ninja/*","*://*.trangchu.news/*","*://automat.systems/*","*://*.rapidshort.lat/*","*://clicknupload.red/*","*://*/recaptcha/api2/*","*://docs.google.com/uc*","*://dutchycorp.ovh/s*/*","*://castles4kids.co.nz/*","*://adbtc.top/surf/browse/*","*://anonym.ninja/download/*","*://faucetcrypto.net/short/*","*://konstantinova.net/verify/*","*://playnano.online/watch-and*","*://adbtc.top/surfiat/browse/*","*://noodlemagazine.com/download/*","*://faucetcrypto.com/claim/step/*","*://*.racedepartment.com/downloads/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1689310404416,"data":{}},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/431691-bypass-all-shortlinks/code/Bypass%20All%20Shortlinks.user.js","uuid":"85135e3b-c4d9-40f1-9fad-2f8aacfbf1e3","source":""},{"name":"Facebook, Youtube and Reddit Video Downloader","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.facebook.com/*","https://www.youtube.com/*","https://www.reddit.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1689310404417,"data":{}},"enabled":true,"position":8,"file_url":"https://greasyfork.org/scripts/453302-facebook-youtube-and-reddit-video-downloader/code/Facebook,%20Youtube%20and%20Reddit%20Video%20Downloader.user.js","uuid":"bd6ef2a0-ed9b-46f1-bd4b-de84a6feabda","source":""}],"settings":{"configMode":100,"connect_mode":"ask","default_tab_types":"incognito+normal","enabled":true,"external_connect":"all","external_update_interval":1,"favicon_service":"google","forbiddenPages":["*example.org/*","*paypal.tld/*","*stripe.com/*","https://*deutsche-bank-24.tld/*","https://*bankofamerica.tld/*","/^.*:\\/\\/apis\\.google\\.com\\/((?!render)([^\\/]+)\\/)+([^\\/]+)?$/","*://www.facebook.com/plugins/*","*://platform.twitter.com/widgets/*","https://drive.google.com/*","http://rerips.com/*","http://drakoric.com/*","https://torrentwal.net/*","https://*.google.com/*","https://*.google.co.id/*","https://www.google.com/","https://www.google.com/*","https://www.google.co.id/","https://www.google.co.id/*","https://softgateon.herokuapp.com/*","http://driverename.iblogbox.com/*","https://www.mm1rza.com/*","https://blog.mm1rza.com/*","https://www.tokopedia.com/*","https://shopee.co.id/*","https://account.microsoft.com/*","https://ibanking.bankjateng.co.id/*","https://mm1rza.com/*","https://web.whatsapp.com/*","https://speedtest.cbn.id/*","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.youtube\\.com(:[0-9]{1,5})?\\/.*$/","https://www.netflix.com/*","https://laksa19.github.io/*","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?portal\\.biznetgio\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?toweroffantasy\\.interactivemap\\.app(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?my\\.dewabiz\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?new\\.clientzone\\.rumahweb\\.com(:[0-9]{1,5})?\\/.*$/","/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.rumahweb\\.com(:[0-9]{1,5})?\\/.*$/"],"incognito_mode":"temporary","layout":"default","layout_user_css":"","native_import":true,"native_import_path":"","native_import_post_action":"disable","notification_showUpdate":"changelog","page_filter_mode":"black","page_whitelist":["/https?:\\/\\/greasyfork\\.org\\/.*/","http://xkcd.com/970/"],"require_sri_mode":"supported","reset_sync":null,"run_sync":null,"scriptUpdateCheckPeriod":21600000,"script_blacklist_server":[{"rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"],"severity":"2"},{"name":"SaveFrom.net helper","reason":"Shows advertisements","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"severity":"3"}],"script_include_mode":"default","statistics_enabled":false,"sync_enabled":false,"sync_type":"4","webrequest_fixCSP":"yes","webrequest_modHeaders":"yes"}}